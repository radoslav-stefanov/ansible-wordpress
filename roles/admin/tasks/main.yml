---
- name: Retrieve main database password
  shell: docker exec -it  "{{ wp_host }}" env  | grep WORDPRESS_DB_PASS | awk -F "=" '{print $2}'
  register: db_password

- name: Strip subdomain
  shell: echo {{ domain }} | sed 's/.*\.\(.*\..*\)/\1/'
  register: strip_domain

- name: Deploy Nginx configuration file
  template:
    src: nginx.conf
    dest: "/srv/www/{{ domain }}/admin/nginx.conf"

- name: Deploy Nginx configuration file
  template:
    src: index.html
    dest: "/srv/www/{{ domain }}/admin/index.html"

- name: Create admin directory
  file:
    path: "/srv/www/{{ domain }}/admin"
    state: directory

- name: Deploy filebrowser configuration file
  copy:
    src: filebrowser.json
    dest: "/srv/www/{{ domain }}/admin/filebrowser"

- name: Start phpmyadmin
  docker_container:
    env:
      PMA_ABSOLUTE_URI: "pma.{{ domain }}"
      PMA_HOST: "{{ db_host }}"  
      PMA_USER: "{{ db_user }}"
      PMA_PASSWORD: "{{ db_password.stdout }}"
    name: "pma_{{ db_user }}"
    image: phpmyadmin/phpmyadmin
    restart: yes
    networks:
      - name: admin
      - name: "{{ wp_host }}"

- name: Start filebrowser
  docker_container:
    name: "filebrowser_{{ db_user }}"
    image: filebrowser/filebrowser
    restart: yes
    volumes:
      - "/srv/www/{{ domain }}/admin/filebrowser:/.filebrowser.json"
      - "/srv/www/{{ domain }}/www_data:/srv"
    networks:
      - name: admin
      - name: "{{ wp_host }}"

- name: Start terminal
  docker_container:
    name: "web_terminal_{{ db_user }}"
    image: raonigabriel/web-terminal:latest
    memory: 1G
    memory_reservation: 1G
    kernel_memory: 1G
    memory_swap: -1
    restart: yes
    volumes:
      - "/srv/www/{{ domain }}/www_data:/var/www"
    networks:
      - name: admin
      - name: "{{ wp_host }}"

- name: Start Nginx
  docker_container:
    env:
      HTTPS_METHOD: "{{ https_method | default ('redirect') }}"
      VIRTUAL_HOST: "admin.{{ strip_domain.stdout }}"
      LETSENCRYPT_HOST: "admin.{{ strip_domain.stdout }}"
      LETSENCRYPT_EMAIL: "{{ letsencrypt_email }}"
    name: "admin_{{ db_user }}"
    image: nginx:latest
    restart: yes
    volumes:
      - "/srv/www/{{ domain }}/admin/nginx.conf:/etc/nginx/nginx.conf"
      - "/srv/www/{{ domain }}/admin/index.html:/etc/nginx/html/index.html"
    networks:
      - name: admin
      - name: nginx_proxy
      - name: "vouch_{{ wp_network }}"

- name: Retrieve tunnel id
  shell: >-
    basename /srv/www/{{ domain }}/admin/*.json .json
  register: tunnel_id
  when: cloudflared is defined

- name: Deploy cloudflared config file
  template:
    src: config.yml
    dest: "/srv/www/{{ domain }}/admin/config.yml"
  when: cloudflared is defined

- name: Start cloudflared tunnel
  docker_container:
    name: "cloudflared_{{ db_user }}"
    image: cloudflare/cloudflared:latest
    restart: yes
    volumes:
      - "/srv/www/{{ domain }}/admin:/home/nonroot/.cloudflared"
    command: tunnel --config /home/nonroot/.cloudflared/config.yml run
    networks:
      - name: "{{ wp_network }}"
  when: cloudflared is defined
